import frappe
from raven.firebase_notification_integration import send_firebase_notification_for_message


def send_firebase_push_notification(message):
	"""
	Hook function ƒë·ªÉ g·ª≠i Firebase push notification cho RavenMessage
	Thay th·∫ø ho·∫∑c b·ªï sung cho h·ªá th·ªëng notification c≈©
	
	Args:
		message: RavenMessage document
	"""
	try:
		# Ki·ªÉm tra xem c√≥ n√™n g·ª≠i Firebase notification kh√¥ng
		if should_send_firebase_notification(message):
			# G·ª≠i Firebase notification
			send_firebase_notification_for_message(message)
		
	except Exception as e:
		frappe.logger().error(f"Error in Firebase message integration: {str(e)}")


def should_send_firebase_notification(message):
	"""
	Ki·ªÉm tra xem c√≥ n√™n g·ª≠i Firebase notification kh√¥ng
	
	Args:
		message: RavenMessage document
		
	Returns:
		bool: True n·∫øu n√™n g·ª≠i notification
	"""
	try:
		# Kh√¥ng g·ª≠i notification trong c√°c tr∆∞·ªùng h·ª£p sau:
		if (
			message.message_type == "System"
			or message.flags.get("send_silently")
			or frappe.flags.in_test
			or frappe.flags.in_install
			or frappe.flags.in_patch
			or frappe.flags.in_import
		):
			return False
		
		# Ki·ªÉm tra xem channel c√≥ self message kh√¥ng
		channel_doc = frappe.get_cached_doc("Raven Channel", message.channel_id)
		if channel_doc.is_self_message:
			return False
		
		return True
		
	except Exception as e:
		frappe.logger().error(f"Error checking Firebase notification conditions: {str(e)}")
		return False


# Monkey patch RavenMessage ƒë·ªÉ add Firebase notification
def patch_raven_message():
	"""
	Patch RavenMessage ƒë·ªÉ th√™m Firebase notification support
	"""
	try:
		from raven.raven_messaging.doctype.raven_message.raven_message import RavenMessage
		
		# Backup original send_push_notification method
		if not hasattr(RavenMessage, '_original_send_push_notification'):
			RavenMessage._original_send_push_notification = RavenMessage.send_push_notification
		
		def new_send_push_notification(self):
			"""
			Enhanced send_push_notification method v·ªõi Firebase support
			"""
			try:
				# Log ƒë·ªÉ debug
				frappe.logger().info(f"üî• Firebase send_push_notification called for message {self.name} in channel {self.channel_id}")
				
				# G·ª≠i Firebase notification
				send_firebase_push_notification(self)
				
				# C√≥ th·ªÉ g·ª≠i c·∫£ original system n·∫øu mu·ªën (comment out ƒë·ªÉ ch·ªâ d√πng Firebase)
				# self._original_send_push_notification()
				
			except Exception as e:
				frappe.logger().error(f"Error in enhanced send_push_notification: {str(e)}")
				import traceback
				frappe.logger().error(traceback.format_exc())
		
		# Patch method
		RavenMessage.send_push_notification = new_send_push_notification
		
		frappe.logger().info("RavenMessage patched for Firebase notifications")
		
	except Exception as e:
		frappe.logger().error(f"Error patching RavenMessage: {str(e)}")


# Auto-patch khi module ƒë∆∞·ª£c import
# Ch·ªâ patch khi Frappe ƒë√£ s·∫µn s√†ng
if not (frappe.flags.in_install or frappe.flags.in_patch or frappe.flags.in_import):
	try:
		patch_raven_message()
	except Exception as e:
		# Ignore l·ªói khi startup, hook s·∫Ω g·ªçi l·∫°i sau
		pass 