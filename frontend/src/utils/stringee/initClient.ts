const STRINGEE_SERVER_ADDRS = ['wss://v1.stringee.com:6899/']

export const initStringeeClient = (token: string, onIncomingCall: (call: any) => void) => {
  const client = new window.StringeeClient([STRINGEE_SERVER_ADDRS[0]])

  client.connect(token)

  client.on('connect', () => {
    console.log('[‚úÖ] Connected to Stringee')

    // ‚úÖ L∆∞u deviceId v√†o sessionStorage sau khi k·∫øt n·ªëi
    const deviceId = client?.deviceId
    if (deviceId) {
      sessionStorage.setItem('stringee_device_id', deviceId)
      console.log('[üíæ] Stored deviceId:', deviceId)
    }
  })

  client.on('authen', (res: any) => console.log('[üîê] Authenticated', res))

  client.on('incomingcall', (call: any) => {
    const incomingDeviceId = call?.client?.deviceId
    const myDeviceId = sessionStorage.getItem('stringee_device_id')

    console.log('[üì≤] Incoming call received on device:', incomingDeviceId)
    console.log('[üÜî] Current session deviceId:', myDeviceId)

    // ‚úÖ So s√°nh deviceId ƒë·ªÉ x√°c ƒë·ªãnh ƒë√∫ng thi·∫øt b·ªã
    if (incomingDeviceId !== myDeviceId) {
      console.warn('[üö´] B·ªè qua cu·ªôc g·ªçi: kh√¥ng ƒë√∫ng thi·∫øt b·ªã')
      return
    }

    // ‚úÖ ƒê√∫ng thi·∫øt b·ªã ‚Üí x·ª≠ l√Ω cu·ªôc g·ªçi
    onIncomingCall(call)
  })

  client.on('disconnect', () => console.log('[‚ùå] Disconnected from Stringee'))
  client.on('requestnewtoken', () => console.log('[üîÑ] Token expired'))
  client.on('otherdeviceauthen', (data: any) => console.warn('[‚ö†Ô∏è] Another device authenticated', data))

  return client
}
